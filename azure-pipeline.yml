trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'azuredevops'
  resourceGroupName: 'azure-devops-rg'
  storageAccountName: 'azuredevopsneerajsa'
  cdnProfileName: 'azure-devops-cdn'
  containerName: 'website'  # this is variable for the container name

stages:
- stage: 'DeployInfrastructure'
  jobs:
  - job: 'Deploy'
    steps:
    - checkout: self
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file ./azure-static-website/main.bicep --parameters storageAccountName=$(storageAccountName)

- stage: 'DeployWebsite'
  jobs:
  - job: 'DeployWebsite'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage container create \
            --name $(containerName) \
            --account-name $(storageAccountName) \
            --fail-on-exist
          az storage blob upload-batch \
            --destination $(containerName) \
            --source ./azure-static-website/website/ \
            --account-name $(storageAccountName)

- stage: 'RunTests'
  jobs:
  - job: 'RunPesterTests'
    steps:
    - checkout: self
    - powershell: Install-Module -Name Pester -Force -SkipPublisherCheck
      displayName: 'Install Pester'
    - powershell: Install-Module -Name Az -AllowClobber -Force -SkipPublisherCheck
      displayName: 'Install Azure PowerShell Module'
    - powershell: |
        .\infra-tests\Infrastructure.Test.ps1 -resourceGroupName $(resourceGroupName) -storageAccountName $(storageAccountName) -cdnProfileName $(cdnProfileName) -appId ${env:APP_ID} -secret ${env:SECRET} -tenantId ${env:TENANT_ID}
      displayName: 'Run Pester Tests'
